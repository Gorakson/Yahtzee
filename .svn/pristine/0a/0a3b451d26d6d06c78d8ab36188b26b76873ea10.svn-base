package edu.hm.cs.kniffel.gui;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import edu.hm.cs.kniffel.model.ReadonlyDice;

import javax.imageio.ImageIO;
import javax.swing.JLabel;

/**
 * Represents dice in the game. Dice objects contain dice data (model) and
 * wrap a JLabel as its visual representation (view).
 * @author U. Hammerschall
 *
 */
public class SwingDice extends JLabel {

    /**
     * Serial number.
     */
    private static final long serialVersionUID = 1L;
    
    private final ReadonlyDice dice;

    /**
     * Custom constructor. Necessary for base class. 
     * @param name of the (base class) label
     */
    public SwingDice(ReadonlyDice dice) {
        this.dice = dice;
    }
    
    @Override
    public void paint(Graphics g) {
        BufferedImage image = null;
        try {
        	System.out.println(dice.getValue());
            image = ImageIO.read(SwingDice.class.getResource("./img/" + dice.getValue() + ".png"));
            int width = image.getWidth() + image.getWidth() / 3;
            int height = image.getHeight() + image.getHeight() / 3;
            g.drawImage(image, (this.getWidth() - width) / 2, 
                    (this.getHeight() - width) / 2, width,
                    height, null, null);
        } 
        catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}
